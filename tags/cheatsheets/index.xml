<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cheatsheets on WRISH</title>
    <link>http://www.wrish.com/tags/cheatsheets/</link>
    <description>Recent content in Cheatsheets on WRISH</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 18 Nov 2016 11:42:35 -0500</lastBuildDate>
    
	<atom:link href="http://www.wrish.com/tags/cheatsheets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Do it with the command line</title>
      <link>http://www.wrish.com/post/do-it-with-a-command-line/</link>
      <pubDate>Fri, 18 Nov 2016 11:42:35 -0500</pubDate>
      
      <guid>http://www.wrish.com/post/do-it-with-a-command-line/</guid>
      <description>You&amp;rsquo;ve built a Windows server without the GUI (Server Core only). You&amp;rsquo;re thinking, I use the command line all the time, this will be easy. It won&amp;rsquo;t. This cheat sheet has a few useful bits and pieces on how to configure it.
#Force Windows Updates (New-Object -ComObject Microsoft.Update.AutoUpdate).DetectNow() #Dump the network interface config (to edit it) netsh interface dump &amp;gt; netcfg.dat #edit the config notepad netcfg.dat #Restore the interface config netsh exec netcfg.</description>
    </item>
    
    <item>
      <title>Powershell Regex cheat sheet</title>
      <link>http://www.wrish.com/post/regex-cheat-sheet/</link>
      <pubDate>Fri, 18 Nov 2016 11:42:35 -0500</pubDate>
      
      <guid>http://www.wrish.com/post/regex-cheat-sheet/</guid>
      <description>A collection of regex&amp;rsquo;s that I always find myself looking up.
#Match while tagging match groups &#39;CowColour Brown&#39; -match &#39;(?&amp;lt;Attribute&amp;gt;\w+) (?&amp;lt;Value&amp;gt;\w+)&#39; | out-null $matches.Attribute $matches.Value #cowColour #Brown #Matching groups - your $matches object will have properties containing the valid matches &amp;quot;Subnet:10.1.1.0/24&amp;quot; -match &#39;Subnet:(?&amp;lt;SiteSubnet&amp;gt;(?:\d{1,3}\.){3}\d{1,3}/\d+)&#39; #Replace to reformat a string &#39;This is a wild test&#39; -replace &#39;.*(w[^ ]+).*&#39;,&#39;Not so $1&#39; #Not so wild #Lazy matching (to prevent over-matching) use a ? after the + or * &amp;quot;&amp;lt;h1&amp;gt;MyHeading&amp;lt;/h1&amp;gt;&amp;quot; -replace &#39;&amp;lt;([^/]+?</description>
    </item>
    
  </channel>
</rss>